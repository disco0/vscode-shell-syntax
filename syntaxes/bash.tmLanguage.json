{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "bash",
    "scopeName": "source.bash",
    "patterns": [
        {
            "include": "#comment"
        },
        {
            "include": "#constant"
        },
        {
            "include": "#entity"
        },
        {
            "include": "#invalid"
        },
        {
            "include": "#keyword"
        },
        {
            "include": "#meta"
        },
        {
            "include": "#operator"
        },
        {
            "include": "#punctuation"
        },
        {
            "include": "#storage"
        },
        {
            "include": "#string"
        },
        {
            "include": "#support"
        },
        {
            "include": "#type"
        },
        {
            "include": "#variable"
        }
    ],
    "repository": {
        "comment": {
            "patterns": [
                {
                    "match": "^#!.*\\b(bash).*",
                    "name": "comment.line.number-sign.shebang.bash"
                },
                {
                    "begin": "#",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.bash"
                        }
                    },
                    "end": "$",
                    "name": "comment.line.number-sign.bash"
                }
            ]
        },
        "constant": {
            "patterns": [
                {
                    "name": "constant.numeric.bash",
                    "match": "\\d"
                }
            ]
        },
        "entity": {
            "patterns": [
                {
                    "name": "entity.name.function",
                    "match": "\\w+(?=\\()"
                }
            ]
        },
        "invalid": {
            "patterns": []
        },
        "keyword": {
            "patterns": [
                {
                    "name": "keyword.control.bash",
                    "match": "\\b(break|case|continue|do|done|elif|else|esac|exit|fi|for|if|in|return|select|switch|then|until|while)\\b"
                }
            ]
        },
        "meta": {
            "patterns": [
                {
                    "begin": "\\$\\(\\(",
                    "end": "\\)\\)",
                    "name": "storage.type.bash"
                },
                {
                    "begin": "\\$\\(",
                    "end": "\\)",
                    "name": "storage.type.bash"
                },
                {
                    "begin": "\\$\\{",
                    "end": "\\}",
                    "name": "storage.type.bash"
                }
            ]
        },
        "operator": {
            "patterns": [
                {
                    "match": "~(!/)",
                    "name": "keyword.operator.bash"
                },
                {
                    "match": "=",
                    "name": "keyword.operator.bash"
                },
                {
                    "match": "&{2}",
                    "name": "keyword.operator.bash"
                }
            ]
        },
        "punctuation": {
            "patterns": []
        },
        "storage": {
            "patterns": [
                {
                    "name": "storage.type.bash",
                    "match": "\\b(function|let|local|unset)\\b"
                }
            ]
        },
        "string": {
            "patterns": [
                {
                    "name": "string.quoted.single.bash",
                    "begin": "'",
                    "end": "'"
                },
                {
                    "name": "string.quoted.double.bash",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "variable.other.bash",
                            "match": "\\$\\w+"
                        }
                    ]
                }
            ]
        },
        "support": {
            "patterns": [
                {
                    "name": "support.function.builtin.bash",
                    "match": "\\b(break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset)\\b"
                },
                {
                    "name": "support.function.builtin.bash",
                    "match": "\\b(alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias)\\b"
                }
            ]
        },
        "type": {
            "patterns": []
        },
        "variable": {
            "patterns": [
                {
                    "name": "variable.other.readline.bash",
                    "match": "(bell-style|bind-tty-special-chars|blink-matching-paren|colored-completion-prefix|colored-stats|comment-begin|completion-display-width|completion-ignore-case|completion-map-case|completion-prefix-display-length|completion-query-items|convert-meta|disable-completion|echo-control-characters|editing-mode|emacs-mode-string|enable-bracketed-paste|enable-keypad|enable-meta-key|expand-tilde|history-preserve-point|history-size|horizontal-scroll-mode|input-meta|isearch-terminators|keymap|keyseq-timeout|mark-directories|mark-modified-lines|mark-symlinked-directories|match-hidden-files|menu-complete-display-prefix|output-meta|page-completions|print-completions-horizontally|revert-all-at-newline|show-all-if-ambiguous|show-all-if-unmodified|show-mode-in-prompt|skip-completed-text|vi-cmd-mode-string|vi-ins-mode-string|visible-stats)"
                },
                {
                    "name": "variable.other.bash",
                    "match": "\\$\\w+"
                }
            ]
        }
    }
}